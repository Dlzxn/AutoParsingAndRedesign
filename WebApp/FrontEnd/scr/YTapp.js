const searchInput = document.getElementById('searchInput');
const searchButton = document.getElementById('searchButton');
const resultsContainer = document.getElementById('results');
const loadingOverlay = document.getElementById('loadingOverlay');

const toggleLoading = (show) => {
    loadingOverlay.style.display = show ? 'flex' : 'none';
    searchInput.disabled = show;
    searchButton.disabled = show;
};

// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
const showError = (message) => {
    resultsContainer.innerHTML = `<div class="error-message">‚ùå ${message}</div>`;
};

// –°–æ–∑–¥–∞–µ—Ç –±–ª–æ–∫ —Å –≤–∏–¥–µ–æ
const createResultItem = ({ title, url }) => {
    const item = document.createElement('div');
    item.className = 'result-item';

    // –í—Å—Ç–∞–≤–ª—è–µ–º iframe –¥–ª—è –≤–∏–¥–µ–æ
    const videoId = url.split('v=')[1]; // –ü–æ–ª—É—á–∞–µ–º videoId –∏–∑ —Å—Å—ã–ª–∫–∏
    const iframeUrl = `https://www.youtube.com/embed/${videoId}`;

    item.innerHTML = `
        <div class="video-box">
            <h3><a href="${url}" target="_blank" rel="noopener noreferrer">${title || url}</a></h3>
            <iframe width="560" height="315" 
                    src="${iframeUrl}" 
                    title="${title || 'YouTube video'}" 
                    frameborder="0" 
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
                    allowfullscreen>
            </iframe>
            <div class="button-group" style="margin-top: 10px;">
                <button class="download-button" data-url="${url}">–°–∫–∞—á–∞—Ç—å</button>
                <button class="edit-button" data-url="${url}">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
            </div>
        </div>
    `;

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–∫–∞—á–∞—Ç—å"
    const downloadButton = item.querySelector('.download-button');
    downloadButton.addEventListener('click', () => {
        const downloadUrl = `/download/yt?url=${encodeURIComponent(url)}`;
        window.location.href = downloadUrl;
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" ‚Äî –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
    const editButton = item.querySelector('.edit-button');
    editButton.addEventListener('click', () => {
        console.log('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ:', url);
        // —Ç—É—Ç –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Ñ–æ—Ä–º—É –∏–ª–∏ –º–æ–¥–∞–ª–∫—É
    });

    return item;
};


// –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
const performSearch = async (query) => {
    toggleLoading(true);
    resultsContainer.innerHTML = '';

    try {
        const response = await fetch(`/search/YT?tag=${encodeURIComponent(query)}`);

        const data = await response.json();

        if (!response.ok) {
            showError(data.error || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞');
            return;
        }

        if (!data.length) {
            resultsContainer.innerHTML = `<div class="no-results">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üòï</div>`;
            return;
        }

        data.forEach(item => {
            resultsContainer.appendChild(createResultItem(item));
        });

    } catch (err) {
        console.error(err);
        showError('–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞');
    } finally {
        toggleLoading(false);
    }
};

// –°–ª—É—à–∞—Ç–µ–ª—å –∫–Ω–æ–ø–∫–∏
searchButton.addEventListener('click', () => {
    const query = searchInput.value.trim();
    if (query.length > 2) {
        performSearch(query);
    } else {
        showError('–í–≤–µ–¥–∏—Ç–µ —Ö–æ—Ç—è –±—ã 3 —Å–∏–º–≤–æ–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞');
    }
});
